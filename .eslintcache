[{"D:\\React\\ChatApp\\chatapp\\src\\index.js":"1","D:\\React\\ChatApp\\chatapp\\src\\reportWebVitals.js":"2","D:\\React\\ChatApp\\chatapp\\src\\App.js":"3","D:\\React\\ChatApp\\chatapp\\src\\Services\\firebase.js":"4","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Home\\Home.js":"5","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Chat\\Chat.js":"6","D:\\React\\ChatApp\\chatapp\\src\\Pages\\SignUp\\Signup.js":"7","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\Login.js":"8","D:\\React\\ChatApp\\chatapp\\src\\Components\\Header.js":"9","D:\\React\\ChatApp\\chatapp\\src\\Components\\Footer.js":"10","D:\\React\\ChatApp\\chatapp\\src\\ProjectImages\\ProjectImages.js":"11","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\LoginStrings.js":"12","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Profile\\Profile.js":"13","D:\\React\\ChatApp\\chatapp\\src\\Pages\\ChatBox\\ChatBox.js":"14","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Welcome\\Welcome.js":"15","D:\\React\\web-messenger1\\src\\index.js":"16","D:\\React\\web-messenger1\\src\\App.js":"17","D:\\React\\web-messenger1\\src\\serviceWorker.js":"18","D:\\React\\web-messenger1\\src\\containers\\LoginPage\\index.js":"19","D:\\React\\web-messenger1\\src\\containers\\RegisterPage\\index.js":"20","D:\\React\\web-messenger1\\src\\containers\\HomePage\\index.js":"21","D:\\React\\web-messenger1\\src\\components\\Layout\\index.js":"22","D:\\React\\web-messenger1\\src\\components\\Header\\index.js":"23","D:\\React\\web-messenger1\\src\\components\\Layout\\UI\\Card\\index.js":"24","D:\\React\\web-messenger1\\src\\store\\index.js":"25","D:\\React\\web-messenger1\\src\\reducers\\index.js":"26","D:\\React\\web-messenger1\\src\\actions\\index.js":"27","D:\\React\\web-messenger1\\src\\actions\\auth.actions.js":"28","D:\\React\\web-messenger1\\src\\reducers\\auth.reducer.js":"29","D:\\React\\web-messenger1\\src\\actions\\constants.js":"30","D:\\React\\web-messenger1\\src\\components\\PrivateRoute.js":"31","D:\\React\\web-messenger1\\src\\actions\\user.actions.js":"32","D:\\React\\web-messenger1\\src\\reducers\\user.reducer.js":"33"},{"size":501,"mtime":1607865210162,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":2532,"mtime":1607864855797,"results":"37","hashOfConfig":"35"},{"size":565,"mtime":1607494963414,"results":"38","hashOfConfig":"35"},{"size":1638,"mtime":1607580076390,"results":"39","hashOfConfig":"35"},{"size":11081,"mtime":1609009925646,"results":"40","hashOfConfig":"35"},{"size":6080,"mtime":1609008658915,"results":"41","hashOfConfig":"35"},{"size":7739,"mtime":1609008791865,"results":"42","hashOfConfig":"35"},{"size":752,"mtime":1609009237744,"results":"43","hashOfConfig":"35"},{"size":566,"mtime":1607494781648,"results":"44","hashOfConfig":"35"},{"size":402,"mtime":1608291342396,"results":"45","hashOfConfig":"35"},{"size":339,"mtime":1607971692590,"results":"46","hashOfConfig":"35"},{"size":6044,"mtime":1608014367349,"results":"47","hashOfConfig":"35"},{"size":14229,"mtime":1609271373882,"results":"48","hashOfConfig":"35"},{"size":670,"mtime":1608014370354,"results":"49","hashOfConfig":"35"},{"size":1133,"mtime":1609509745761,"results":"50","hashOfConfig":"51"},{"size":923,"mtime":1609664366032,"results":"52","hashOfConfig":"51"},{"size":5086,"mtime":1595346034000,"results":"53","hashOfConfig":"54"},{"size":1879,"mtime":1610003810886,"results":"55","hashOfConfig":"51"},{"size":2146,"mtime":1609776185800,"results":"56","hashOfConfig":"51"},{"size":4091,"mtime":1610004201188,"results":"57","hashOfConfig":"51"},{"size":249,"mtime":1609502019488,"results":"58","hashOfConfig":"51"},{"size":1383,"mtime":1609825937851,"results":"59","hashOfConfig":"51"},{"size":230,"mtime":1609503141606,"results":"60","hashOfConfig":"51"},{"size":223,"mtime":1609507894798,"results":"61","hashOfConfig":"51"},{"size":258,"mtime":1609825938623,"results":"62","hashOfConfig":"51"},{"size":66,"mtime":1609778193181,"results":"63","hashOfConfig":"51"},{"size":4757,"mtime":1609912984143,"results":"64","hashOfConfig":"51"},{"size":1449,"mtime":1609662551724,"results":"65","hashOfConfig":"51"},{"size":232,"mtime":1609571142127,"results":"66","hashOfConfig":"51"},{"size":546,"mtime":1609571962283,"results":"67","hashOfConfig":"51"},{"size":2676,"mtime":1609913852445,"results":"68","hashOfConfig":"51"},{"size":926,"mtime":1609912986509,"results":"69","hashOfConfig":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"neamvy",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1dl1aeb",{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6tngkm",{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"110"},"D:\\React\\ChatApp\\chatapp\\src\\index.js",[],["149","150"],"D:\\React\\ChatApp\\chatapp\\src\\reportWebVitals.js",[],"D:\\React\\ChatApp\\chatapp\\src\\App.js",["151"],"import React, { Component} from 'react';\nimport {\n    Route,\n    BrowserRouter as Router,\n    Switch\n} from 'react-router-dom';\nimport './App.css';\nimport Home from'./Pages/Home/Home';\nimport Chat from './Pages/Chat/Chat';\nimport Profile from './Pages/Profile/Profile';\nimport SignUp from './Pages/SignUp/Signup';\nimport Login from './Pages/Login/Login';\nimport firebase from './Services/firebase';\nimport {toast, ToastContainer} from 'react-toastify';\n\n\nclass App extends Component{\n\n    showToast = (type, message) =>{\n        switch(type){\n            case 0:\n                toast.warning(message)\n                break;\n            case 1:\n                toast.success(message)\n                default:\n                break;\n        }\n    }\n    constructor(){\n            super();\n            this.state={\n                authenticated: false,\n                loading: true\n            };\n    }\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged(user =>{\n            if(user){\n                this.setState({\n                    authenticated : true,\n                    loading : false\n                });\n            }else{\n                this.setState({\n                    authenticated : false,\n                    loading : false\n                });\n            }\n        })\n    }\n\n\n\nrender(){\n    return this.state.loading === true ? (\n        <div className=\"spinner-border text-success\" role='status'>\n            <span className=\"sr-only\">Yükleniyor...</span>\n            </div>\n    ): (\n        <Router>\n            <ToastContainer\n            autoClose={2000}\n            hideProgressBar={true}\n            position={toast.POSITION.TOP_CENTER}\n            />\n            <Switch>\n                <Route\n                exact\n                path=\"/\"\n                render= { props=> <Home {...props}/>}/>\n\n                <Route\n                path=\"/login\"\n                render= {props => <Login showToast={this.showToast}{...props}/>}\n                />\n\n                <Route\n                path=\"/profile\"\n                render= {props => <Profile showToast={this.showToast}{...props}/>}\n                />\n\n                <Route\n                path=\"/signup\"\n                render= {props => <SignUp showToast={this.showToast}{...props}/>}\n                />\n\n                <Route\n                path=\"/chat\"\n                render= {props => <Chat showToast={this.showToast}{...props}/>}\n                />\n            </Switch>\n        </Router>\n    )\n}\n}\nexport default App","D:\\React\\ChatApp\\chatapp\\src\\Services\\firebase.js",["152"],"import React from 'react'\r\nimport  firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAcRopcd1mG1LSJbhfMbl0EvZkuQPofnWc\",\r\n    authDomain: \"talkto-7b6ec.firebaseapp.com\",\r\n    databaseURL: \"https://talkto-7b6ec.firebaseio.com\",\r\n    projectId: \"talkto-7b6ec\",\r\n    storageBucket: \"talkto-7b6ec.appspot.com\",\r\n    messagingSenderId: \"151506466036\",\r\n    appId: \"1:151506466036:web:9a070f37b0cc639c131aa1\",\r\n    measurementId: \"G-EMCPKH7G9X\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Home\\Home.js",["153","154","155"],"import React, {Component} from 'react';\r\nimport Header from '../../Components/Header';\r\nimport Footer from '../../Components/Footer';\r\nimport './Home.css';\r\nimport Images from '../../ProjectImages/ProjectImages';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class HomePage extends Component{\r\n    render(){\r\n    return(\r\n       <div>\r\n            <Header/>\r\n            <div class=\"splash-container\">\r\n                <div class=\"splash\">\r\n                    <h1 class=\"splash-head\">WEB CHAT UYGULAMASI</h1>\r\n                    <p class=\"splash-subhead\">\r\n                        Hadi sevdiğin biriyle konuş.\r\n                    </p>\r\n                    <div id=\"custom-button-wrapper\">\r\n                        <Link to = '/Login'>\r\n                            <a class=\"my-super-cool-btn\">\r\n                                <div class=\"dots-container\">\r\n                                    <div class=\"dot\"></div>\r\n                                    <div class=\"dot\"></div>\r\n                                    <div class=\"dot\"></div>\r\n                                    <div class=\"dot\"></div>\r\n                                </div>\r\n                                <span className=\"buttoncooltext\">Başla</span>\r\n                            </a>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"content-wrapper\">\r\n                <div class=\"content\">\r\n                    <h2 class=\"content-head is-center\">Features of WebChat Application</h2>\r\n                </div>\r\n            </div>\r\n       </div>\r\n        \r\n    )\r\n    }\r\n}","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Chat\\Chat.js",["156","157","158","159","160","161","162","163","164"],"import React from 'react'\r\nimport LoginString from \"../Login/LoginStrings\";\r\nimport firebase from \"../../Services/firebase\";\r\nimport './Chat.css';\r\nimport ChatBox from '../ChatBox/ChatBox';\r\nimport WelcomeBord from '../Welcome/Welcome';\r\nimport ReactLoading from 'react-loading';\r\n\r\nexport default class Chat extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isLoading: true,\r\n            isOpenDialogConfirmLogout: false,\r\n            currentPeerUser: null,\r\n            displayedContactSwitchedNotification:[],\r\n            displayedContacts: []\r\n        }\r\n        this.currentUserName = localStorage.getItem(LoginString.userName);\r\n        this.currentUserId = localStorage.getItem(LoginString.ID)\r\n        this.currentUserPhoto = localStorage.getItem(LoginString.ProfilURL);\r\n        this.currentUserDocumentId = localStorage.getItem(LoginString.FirebaseDocumentId)\r\n\r\n        this.searchUsers = [];\r\n        this.displayedContacts = [];\r\n        this.currentUserMessages = [];\r\n        this.notificationMessagesErase = []\r\n        this.onProfileClick = this.onProfileClick.bind(this);\r\n        this.getListUser = this.getListUser.bind(this);\r\n        this.renderListUser = this.renderListUser.bind(this);\r\n        this.getClassnameforUserandNotification = this.getClassnameforUserandNotification.bind(this);\r\n        this.notificationErase = this.notificationErase.bind(this);\r\n        this.updaterenderList = this.updaterenderList.bind(this);\r\n    }\r\n    logout = ()=>{\r\n    firebase.auth().signOut()\r\n    this.props.history.push('/')\r\n    localStorage.clear()\r\n\r\n    }\r\n    onProfileClick = ()=>{\r\nthis.props.history.push('/profile')\r\n    }\r\n    componentDidMount (){\r\n        firebase.firestore().collection('users').doc(this.currentUserDocumentId).get()\r\n        .then((doc)=>{\r\n            doc.data().messages.map((item)=>{\r\n                this.currentUserMessages.push({\r\n                    notificationId: item.notificationId,\r\n                    number: item.number\r\n                })\r\n            })\r\n            this.setState({\r\n                displayedContactSwitchedNotification: this.currentUserMessages\r\n            })\r\n        })\r\n        this.getListUser()\r\n    }\r\n    getListUser = async()=>{\r\n        const result = await firebase.firestore().collection('users').get();\r\n        if(result.docs.length > 0){\r\n            let listUsers = []\r\n            listUsers = [...result.docs]\r\n            listUsers.forEach((item, index)=>{\r\n                this.searchUsers.push(\r\n                    {\r\n                        key: index,\r\n                        documentKey: item.id,\r\n                        id: item.data().id,\r\n                        userName: item.data().userName,\r\n                        messages: item.data().messages,\r\n                        ProfilURL: item.data().ProfilURL,\r\n                        description: item.data().description\r\n                    }\r\n                )\r\n\r\n            })\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n        this.renderListUser()\r\n\r\n    }\r\n    getClassnameforUserandNotification = (itemId)=>{\r\n        let number = 0\r\n        let className = \"\"\r\n        let check = false;\r\n        if(this.state.currentPeerUser && \r\n            this.state.currentPeerUser.id === itemId){\r\n                className = 'viewWrapItemFocused'\r\n            }else{\r\n                this.state.displayedContactSwitchedNotification.forEach((item)=>{\r\n                    if(item.notificationId.length > 0){\r\n                        if(item.notificationId === itemId){\r\n                            check = true\r\n                            number = item.number\r\n\r\n                        }\r\n                    }\r\n                })\r\n                if(check === true){\r\n                    className = \"viewWrapItemNotification\"\r\n                }\r\n                else{\r\n                    className = 'viewWrapItem'\r\n                }\r\n            }\r\n            return className\r\n    }\r\n    notificationErase =(itemId)=>{\r\n        this.state.displayedContactSwitchedNotification.forEach((el)=>{\r\n            if(el.notificationId.length > 0){\r\n                if(el.notificationId != itemId){\r\n                    this.notificationMessagesErase.push(\r\n                        {\r\n                            notificationId: el.notificationId,\r\n                            number: el.number\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        })\r\n        this.updaterenderList()\r\n    }\r\n    updaterenderList =()=>{\r\n        firebase.firestore().collection('users').doc(this.currentUserDocumentId).update(\r\n            {messages: this.notificationMessagesErase}\r\n        )\r\n        this.setState({\r\n            displayedContactSwitchedNotification: this.notificationMessagesErase\r\n        })\r\n    }\r\n\r\n    renderListUser = ()=>{\r\n        if(this.searchUsers.length > 0){\r\n            let viewListUser = []\r\n            let classname =\"\"\r\n            this.searchUsers.map((item)=>{\r\n                if(item.id != this.currentUserId){\r\n                    classname= this.getClassnameforUserandNotification(item.id)\r\n                    viewListUser.push(\r\n                        <button\r\n                        id={item.key}\r\n                        className = {classname}\r\n                        onClick = {()=>{\r\n                            this.notificationErase(item.id)\r\n                            this.setState({currentPeerUser: item})\r\n                            document.getElementById(item.key).style.backgroundColor = '#fff'\r\n                            document.getElementById(item.key).style.color = '#fff'\r\n                        }}\r\n                        >\r\n\r\n                            <img\r\n                            className = \"viewAvatarItem\"\r\n                            src = {item.ProfilURL}\r\n                            alt = \"\"\r\n                            />\r\n                            <div className=\"viewWrapContentItem\">\r\n                                <span className=\"textItem\">\r\n                                    {`userName : ${item.userName}`}\r\n                                </span>\r\n                            </div>\r\n                            {classname === 'viewWrapItemNotification' ?\r\n                            <div className=\"notificationparagraph\">\r\n                            <p id={item.key} className=\"newmessages\">Yeni Mesajlar</p>\r\n                            </div>: null}\r\n                        </button>\r\n                    )\r\n                        \r\n                    \r\n                }\r\n            })\r\n            this.setState({\r\n                displayedContacts: viewListUser\r\n            })\r\n        }else{\r\n            console.log(\"No User is Present\")\r\n\r\n        }\r\n    }\r\n    searchHandler =(event)=>{\r\n        let searchQuery = event.target.value.toLowerCase(),\r\n        displayedContacts = this.searchUsers.filter((el)=>{\r\n            let SearchValue = el.userName.toLowerCase();\r\n            return SearchValue.indexOf(searchQuery) != -1;\r\n        })\r\n        this.displayedContacts = displayedContacts\r\n        this.displayedSearchedContacts()\r\n    }\r\n    displayedSearchedContacts =()=>{\r\n        if(this.searchUsers.length > 0){\r\n            let viewListUser = []\r\n            let classname =\"\"\r\n            this.displayedContacts.map((item)=>{\r\n                if(item.id != this.currentUserId){\r\n                    classname= this.getClassnameforUserandNotification(item.id)\r\n                    viewListUser.push(\r\n                        <button\r\n                        id={item.key}\r\n                        className = {classname}\r\n                        onClick = {()=>{\r\n                            this.notificationErase(item.id)\r\n                            this.setState({currentPeerUser: item})\r\n                            document.getElementById(item.key).style.backgroundColor = '#fff'\r\n                            document.getElementById(item.key).style.color = '#fff'\r\n                        }}\r\n                        >\r\n\r\n                            <img\r\n                            className = \"viewAvatarItem\"\r\n                            src = {item.ProfilURL}\r\n                            alt = \"\"\r\n                            />\r\n                            <div className=\"viewWrapContentItem\">\r\n                                <span className=\"textItem\">\r\n                                    {`userName : ${item.userName}`}\r\n                                </span>\r\n                            </div>\r\n                            {classname === 'viewWrapItemNotification' ?\r\n                            <div className=\"notificationparagraph\">\r\n                            <p id={item.key} className=\"newmessages\">Yeni Mesajlar</p>\r\n                            </div>: null}\r\n                        </button>\r\n                    )\r\n                        \r\n                    \r\n                }\r\n            })\r\n            this.setState({\r\n                displayedContacts: viewListUser\r\n            })\r\n        }else{\r\n            console.log(\"No User is Present\")\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"root\">\r\n                <div className=\"body\">\r\n                    <div className=\"viewListUser\">\r\n                        <div className=\"profileviewleftside\">\r\n                            <img\r\n                            className=\"ProfilePicture\"\r\n                            alt=\"\"\r\n                            src={this.currentUserPhoto}\r\n                            onClick={this.onProfileClick}\r\n                            />\r\n                            <button className=\"Logout\" onClick={this.logout}>Çıkış Yap</button>\r\n                        </div>\r\n                        <div classname=\"rootsearchbar\">\r\n                            <div classname=\"input-container\">\r\n                            <i class=\"fa fa-search icon\"></i>\r\n                                <input class=\"input-field\"\r\n                                type=\"text\"\r\n                                onChange={this.searchHandler}\r\n                                placeholder=\"Ara\"\r\n                                />                         \r\n                            </div>\r\n                        </div>\r\n                        {this.state.displayedContacts}\r\n                    </div>\r\n                    <div className=\"viewBoard\">\r\n                        {this.state.currentPeerUser ? (\r\n                            <ChatBox currentPeerUser = {this.state.currentPeerUser}\r\n                            showToast = {this.state.showToast}\r\n                            />):(<WelcomeBord\r\n                                currentUserName={this.currentUserName}\r\n                                currentUserPhoto={this.currentUserPhoto}/>\r\n                        \r\n                    )}\r\n                    </div>\r\n                </div>               \r\n            </div>\r\n        )\r\n    }\r\n}","D:\\React\\ChatApp\\chatapp\\src\\Pages\\SignUp\\Signup.js",["165"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./Signup.css\";\r\nimport {Card} from 'react-bootstrap';\r\nimport firebase from '../../Services/firebase';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LoginString from '../Login/LoginStrings';\r\n\r\nexport default class SignUp extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state= {\r\n            email:\"\",\r\n            password:\"\",\r\n            userName:\"\",\r\n            error:null\r\n        }\r\n        this.handlechange=this.handlechange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n    }\r\n    handlechange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n            \r\n        });\r\n    }\r\n    async handleSubmit(event){\r\n        const {userName,password,email}=this.state; \r\n        event.preventDefault();\r\n        try{\r\n            firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async result =>{\r\n                firebase.firestore().collection('users')\r\n                .add({\r\n                    userName,\r\n                    userID:result.user.uid,\r\n                    email,\r\n                    password,\r\n                    URL:'',\r\n                    description:'',\r\n                    messages:[{notificationId:\"\",number: 0}]\r\n\r\n                }).then((docRef)=>{\r\n                    localStorage.setItem(LoginString.ID, result.user.uid);\r\n                    localStorage.setItem(LoginString.userName, userName);\r\n                    localStorage.setItem(LoginString.Email, email);\r\n                    localStorage.setItem(LoginString.Password, password);\r\n                    localStorage.setItem(LoginString.ProfilURL, \"\");\r\n                    localStorage.setItem(LoginString.UPLOAD_CHANGED, 'state_changed');\r\n                    localStorage.setItem(LoginString.Description, \"\");\r\n                    localStorage.setItem(LoginString.FirebaseDocumentId, docRef.id);\r\n                    this.setState({\r\n                        userName:'',\r\n                        password:'',\r\n                        url:'',\r\n                    });\r\n                    this.props.history.push(\"/chat\")\r\n                })\r\n                .catch((error) =>{\r\n                    console.error(\"Error adding document\",error) \r\n                })\r\n            })\r\n        } \r\n        catch(error){\r\n            document.getElementById('1').innerHTML=\"Giriş yaparken hata oluştu lütfen tekrar deneyin\"\r\n\r\n        }\r\n    }\r\n    render(){\r\n        const Signinsee={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignItems:'center',\r\n            color:'White',\r\n            backgroundColor:'#1ebea5',\r\n            width:'100%',\r\n            boxShadow:\"0 5px 5px #808888\",\r\n            height:\"10rem\",\r\n            paddingTop:\"48px\",\r\n            opactiy:\"0.5\",\r\n            borderBottom:'5px solid green',\r\n        }\r\n        return (\r\n            <div>\r\n                <CssBaseline/>\r\n                <Card style={Signinsee}>\r\n                    <div>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign Up\r\n                        To\r\n                    </Typography>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/\">\r\n                            <button class=\"btn\"><i class=\"fa fa-home\"></i>TALK TO</button>\r\n                        </Link>\r\n                    </div>\r\n                </Card>\r\n              <Card className=\"formacontrooutside\">\r\n                  <form className=\"customform\" noValidate onSubmit={this.handleSubmit}>\r\n\r\n                    <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Adres Örneği:abc@gmail.com\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                    onChange={this.handlechange}\r\n                    value={this.state.email}\r\n                    />\r\n                    \r\n                    <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    label=\"Şifre\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    autoFocus\r\n                    onChange={this.handlechange}\r\n                    value={this.state.password}\r\n                    />\r\n                    <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"userName\"\r\n                    label=\"İsim Giriniz\"\r\n                    name=\"userName\"\r\n                    autoComplete=\"userName\"\r\n                    autoFocus\r\n                    onChange={this.handlechange}\r\n                    value={this.state.userName}\r\n                    />\r\n                   <div className=\"CenterAliningItems\">\r\n                       <button class=\"button1\" type=\"submit\">\r\n                           <span>Kayıt Ol</span>\r\n                       </button>\r\n                   </div>\r\n                   <div>\r\n                       <p style={{color:'grey'}}>Bir Hesabınız var mı?</p>\r\n                       <Link to=\"/login\">\r\n                           Giriş Yap\r\n                       </Link>\r\n                   </div>\r\n                   <div className=\"error\">\r\n                       <p id='1' style={{color:'red'}}></p>\r\n                   </div>\r\n                  </form>\r\n              </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\Login.js",["166"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from '../../Services/firebase';\r\n\r\nimport LoginString from '../Login/LoginStrings';\r\nimport './Login.css';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typhography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nexport default class Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoading: true,\r\n            email: \"\",\r\n            password: \"\"\r\n        }\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n    }\r\n    handleChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n            \r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(localStorage.getItem(LoginString.ID)){\r\n            this.setState({isLoading: false}, ()=>{\r\n                this.setState({isLoading: false})\r\n                this.props.showToast(1,'Giriş başarılı')\r\n                this.props.history.push('./chat')\r\n            })\r\n        }else{\r\n            this.setState({isLoading: false})\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n\r\n        await firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(async result=>{\r\n            let user= result.user;\r\n            if(user){\r\n                await firebase.firestore().collection('users')\r\n                .where('id', \"==\", user.uid)\r\n                .get()\r\n                .then(function(querySnapShot){\r\n                    querySnapShot.forEach(function(doc){\r\n                        const currentdata = doc.data()\r\n                        localStorage.setItem(LoginString.FirebaseDocumentId, doc.id);\r\n                        localStorage.setItem(LoginString.ID, currentdata.id);\r\n                        localStorage.setItem(LoginString.userName, currentdata.name)\r\n                        localStorage.setItem(LoginString.Email, currentdata.email)\r\n                        localStorage.setItem(LoginString.Password, currentdata.password)\r\n                        localStorage.setItem(LoginString.ProfilURL, currentdata.ProfilURL)\r\n                        localStorage.setItem(LoginString.Description, currentdata.description)           \r\n                     })\r\n                })   \r\n            }\r\n            this.props.history.push('/chat')\r\n        }).catch(function(error){\r\n           document.getElementById('1').innerHTML=\"Yanlış E-mail/Password veya zayıf bağlantı\"\r\n        })\r\n    }\r\n    render(){\r\n        const paper={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignItems:'center',\r\n            paddingLeft:'10px',\r\n            paddingRight:'10px'\r\n        }\r\n        const rightcomponent={\r\n            boxShadow:'0 80px 80px #808888',\r\n            backgroundColor:'smokegrey'\r\n        }\r\n        const root={\r\n            height:'100vh',\r\n            background:\"linear-gradient(90deg, #e3ffe7 0%, #d9e7ff 100%)\",\r\n\r\n            marginBottom:'50px'\r\n        }\r\n        const Signinsee={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignItems:'center',\r\n            color:'White',\r\n            marginBottom:'20px',\r\n            backgroundColor:'#1ebea5',\r\n            width:'100%',\r\n            boxShadow:'0 5px 5px #808888',\r\n            height:\"10rem\",\r\n            paddingTop:\"48px\",\r\n            opacity:\"0.5\",\r\n            borderBottom:'5px solid green'\r\n\r\n        }\r\n        const form={\r\n            width:'100%',\r\n            marginTop:'50px'\r\n        }\r\n        const avatar={\r\n            backgroundColor:'green'\r\n        }\r\n        return(\r\n            <Grid container component=\"main\" style={root}>\r\n                <CssBaseline/>\r\n                <Grid item xs={1} sm={4} md={7} className=\"image\">\r\n                <div className=\"image1\"></div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={5} style={rightcomponent} elevation={6} square>\r\n                    <Card style={Signinsee}>\r\n                        <div>\r\n                            <Avatar style={avatar}>\r\n                                <LockOutlinedIcon width=\"50px\" height=\"50px\"/>\r\n                            </Avatar>\r\n                        </div>\r\n                        <div>\r\n                            <Typhography component=\"h1\" variant=\"h5\"\r\n                            Sign in\r\n                            To\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Link to=\"/\">\r\n                                <button class=\"btn\">\r\n                                    <i class=\"fa fa-home\"></i>\r\n                                    TalkTo\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </Card>\r\n                    <div style={paper}>\r\n                        <form style={form} noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Adres\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                    onChange={this.handleChange}\r\n                    value={this.state.email}\r\n                    />\r\n                     <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    label=\"Şifre\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    autoFocus\r\n                    onChange={this.handleChange}\r\n                    value={this.state.password}\r\n                    />\r\n                    <FormControlLabel\r\n                    control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                    label=\"Beni hatırla\"\r\n                    />\r\n                    <Typhography component=\"h6\" variant=\"h5\">\r\n                    {this.state.error ?(\r\n                          <p className=\"text-danger\">{this.state.error}</p>\r\n                      ):null}  \r\n                    </Typhography>\r\n                    \r\n                        <div className=\"CenterAliningItems\">\r\n                            <button class=\"button1\" type=\"submit\">\r\n                                <span>Giriş Yap</span>\r\n                            </button>\r\n\r\n                        </div>\r\n                  \r\n                  <div className=\"CenterAliningItems\">\r\n                      <p>Bir hesabınız yok mu?</p>\r\n                      <Link to=\"/signup\" variant=\"body2\">\r\n                          Kayıt Ol\r\n                      </Link>\r\n                  </div>\r\n                  <div className=\"error\">\r\n                      <p id='1' style={{color:'red'}}></p>\r\n                  </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}","D:\\React\\ChatApp\\chatapp\\src\\Components\\Header.js",["167","168"],"import React from 'react';\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(){\r\n    return(\r\n        <header class=\"header-login-signup\">\r\n            <div class=\"header-limiter\">\r\n                <h1><a href=\"/\">Talk<span>To</span></a></h1>\r\n                <nav>\r\n                    <Link to=\"/\">Anasayfa</Link>\r\n                    <a class=\"selected\"><Link to=\"/\">Hakkında</Link></a>\r\n                    <a><Link to=\"/\">İletişim</Link></a>\r\n                </nav>\r\n                <ul>\r\n                    <li><Link to=\"/login\">Giriş</Link></li>\r\n                    <li><Link to=\"/signup\">Kayıt Ol</Link></li>\r\n                </ul>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","D:\\React\\ChatApp\\chatapp\\src\\Components\\Footer.js",[],"D:\\React\\ChatApp\\chatapp\\src\\ProjectImages\\ProjectImages.js",[],"D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\LoginStrings.js",[],"D:\\React\\ChatApp\\chatapp\\src\\Pages\\Profile\\Profile.js",[],"D:\\React\\ChatApp\\chatapp\\src\\Pages\\ChatBox\\ChatBox.js",["169","170","171"],"D:\\React\\ChatApp\\chatapp\\src\\Pages\\Welcome\\Welcome.js",[],"D:\\React\\web-messenger1\\src\\index.js",[],["172","173"],"D:\\React\\web-messenger1\\src\\App.js",["174"],"import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './containers/HomePage';\nimport LoginPage from './containers/LoginPage';\nimport RegisterPage from './containers/RegisterPage';\nimport PrivateRoute from './components/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isLoggedInUser } from './actions';\n\n\nfunction App() {\n\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if(!auth.authenticated){\n      dispatch(isLoggedInUser())\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <PrivateRoute path=\"/\" exact component={HomePage} />\n\n        \n        <Route path=\"/login\" component={LoginPage} />\n        <Route path=\"/signup\" component={RegisterPage} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\React\\web-messenger1\\src\\serviceWorker.js",[],"D:\\React\\web-messenger1\\src\\containers\\LoginPage\\index.js",["175","176","177","178","179"],"D:\\React\\web-messenger1\\src\\containers\\RegisterPage\\index.js",[],"D:\\React\\web-messenger1\\src\\containers\\HomePage\\index.js",["180","181","182"],"D:\\React\\web-messenger1\\src\\components\\Layout\\index.js",[],"D:\\React\\web-messenger1\\src\\components\\Header\\index.js",[],"D:\\React\\web-messenger1\\src\\components\\Layout\\UI\\Card\\index.js",[],"D:\\React\\web-messenger1\\src\\store\\index.js",[],"D:\\React\\web-messenger1\\src\\reducers\\index.js",[],"D:\\React\\web-messenger1\\src\\actions\\index.js",[],"D:\\React\\web-messenger1\\src\\actions\\auth.actions.js",[],"D:\\React\\web-messenger1\\src\\reducers\\auth.reducer.js",["183","184"],"import { authConstanst } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    authenticating: false,\r\n    authenticated: false,\r\n    error: null\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    \r\n    console.log(action);\r\n\r\n    switch(action.type){\r\n\r\n        case `${authConstanst.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGIN}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                ...action.payload.user,\r\n                authenticated: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGIN}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                authenticated: false,\r\n                authenticating: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_REQUEST`:\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_SUCCESS`:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        case `${authConstanst.USER_LOGOUT}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n\r\n    return state;\r\n}","D:\\React\\web-messenger1\\src\\actions\\constants.js",[],"D:\\React\\web-messenger1\\src\\components\\PrivateRoute.js",[],"D:\\React\\web-messenger1\\src\\actions\\user.actions.js",["185","186","187","188","189"],"import { userConstants } from \"./constants\";\r\nimport firebase  from 'firebase';\r\n\r\n\r\nexport const getRealtimeUsers = (uid) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: `${userConstants.GET_REALTIME_USERS}_REQUEST` });\r\n\r\n        const db = firebase.firestore();\r\n        const unsubscribe = db.collection(\"users\")\r\n        //.where(\"uid\", \"!=\", uid)\r\n        .onSnapshot((querySnapshot) => {\r\n            const users = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                if(doc.data().uid != uid){\r\n                    users.push(doc.data());\r\n                }\r\n            });\r\n            //console.log(users);\r\n\r\n            dispatch({ \r\n                type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n                payload: { users }\r\n            });\r\n    });\r\n    return unsubscribe;\r\n    }\r\n\r\n}\r\nexport const updateMessage = (msgObj) => {\r\n    return async dispatch => {\r\n\r\n        const db = firebase.firestore();\r\n        db.collection('speeches')\r\n        .add({\r\n            ...msgObj,\r\n            isView: false,\r\n            createdAt: new Date()\r\n        })\r\n        .then((data) => {\r\n            console.log(data)\r\n            //success\r\n            //  dispatch({\r\n            //  type: userConstants.GET_REALTIME_MESSAGES,\r\n            //  })\r\n\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n\r\n    }\r\n}\r\nexport const getRealtimeSpeeches = (user) => {\r\n    return async dispatch => {\r\n\r\n        const db = firebase.firestore();\r\n        db.collection('speeches')\r\n        .where('user_uid_1', 'in', [user.uid_1, user.uid_2])\r\n        .orderBy('createdAt','asc')\r\n        .onSnapshot((querySnapshot) => {\r\n\r\n            const speeches = [];\r\n\r\n            querySnapshot.forEach(doc => {\r\n\r\n                if(\r\n                    (doc.data().user_uid_1 == user.uid_1 && doc.data().user_uid_2 == user.uid_2)\r\n                    || \r\n                    (doc.data().user_uid_1 == user.uid_2 && doc.data().user_uid_2 == user.uid_1)\r\n                ){\r\n                    speeches.push(doc.data())\r\n                }  \r\n                  if(speeches.length > 0){\r\n                    dispatch({\r\n                        type: `${userConstants.GET_REALTIME_MESSAGES}`,\r\n                         payload: { speeches }\r\n                    })\r\n                 }else{\r\n                     dispatch({\r\n                         type: `${userConstants.GET_REALTIME_MESSAGES}_FAILURE`,\r\n                         payload: { speeches }\r\n                     })\r\n                 }\r\n             \r\n            });\r\n\r\n            console.log(speeches);\r\n        })\r\n\r\n\r\n    }\r\n}","D:\\React\\web-messenger1\\src\\reducers\\user.reducer.js",["190","191"],"import { userConstants } from \"../actions/constants\"\r\n\r\nconst intiState = {\r\n    users: [],\r\n    speeches: []\r\n}\r\n\r\nexport default (state = intiState, action) => {\r\n    switch(action.type){\r\n        case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n            break;\r\n        case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                users: action.payload.users\r\n            }\r\n            break;\r\n        case userConstants.GET_REALTIME_MESSAGES:\r\n                state = {\r\n                    ...state,\r\n                    speeches: action.payload.speeches\r\n                }\r\n                break;\r\n        // case `${userConstants.GET_REALTIME_MESSAGES}_FAILURE`:\r\n        //             state = {\r\n        //                 ...state,\r\n        //                 speeches: []\r\n        //             }\r\n        //             break;\r\n}\r\nreturn state;\r\n}",{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":26,"column":17,"nodeType":"198","messageId":"199","endLine":27,"endColumn":23},{"ruleId":"200","severity":1,"message":"201","line":1,"column":8,"nodeType":"202","messageId":"203","endLine":1,"endColumn":13},{"ruleId":"200","severity":1,"message":"204","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":14},{"ruleId":"200","severity":1,"message":"205","line":5,"column":8,"nodeType":"202","messageId":"203","endLine":5,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":21,"column":29,"nodeType":"208","endLine":21,"endColumn":58},{"ruleId":"200","severity":1,"message":"209","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":47,"column":43,"nodeType":"212","messageId":"213","endLine":47,"endColumn":45},{"ruleId":"200","severity":1,"message":"214","line":97,"column":29,"nodeType":"202","messageId":"203","endLine":97,"endColumn":35},{"ruleId":"215","severity":1,"message":"216","line":114,"column":38,"nodeType":"217","messageId":"218","endLine":114,"endColumn":40},{"ruleId":"210","severity":1,"message":"211","line":139,"column":40,"nodeType":"212","messageId":"213","endLine":139,"endColumn":42},{"ruleId":"215","severity":1,"message":"216","line":140,"column":28,"nodeType":"217","messageId":"218","endLine":140,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":186,"column":53,"nodeType":"217","messageId":"218","endLine":186,"endColumn":55},{"ruleId":"210","severity":1,"message":"211","line":195,"column":46,"nodeType":"212","messageId":"213","endLine":195,"endColumn":48},{"ruleId":"215","severity":1,"message":"216","line":196,"column":28,"nodeType":"217","messageId":"218","endLine":196,"endColumn":30},{"ruleId":"200","severity":1,"message":"219","line":9,"column":8,"nodeType":"202","messageId":"203","endLine":9,"endColumn":11},{"ruleId":"200","severity":1,"message":"220","line":1,"column":16,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":12,"column":21,"nodeType":"208","endLine":12,"endColumn":41},{"ruleId":"206","severity":1,"message":"207","line":13,"column":21,"nodeType":"208","endLine":13,"endColumn":24},{"ruleId":"200","severity":1,"message":"221","line":9,"column":8,"nodeType":"202","messageId":"203","endLine":9,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":115,"column":48,"nodeType":"212","messageId":"213","endLine":115,"endColumn":50},{"ruleId":"215","severity":1,"message":"216","line":116,"column":36,"nodeType":"217","messageId":"218","endLine":116,"endColumn":38},{"ruleId":"192","replacedBy":"222"},{"ruleId":"194","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":21,"column":6,"nodeType":"226","endLine":21,"endColumn":8,"suggestions":"227"},{"ruleId":"200","severity":1,"message":"228","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"229","line":4,"column":18,"nodeType":"202","messageId":"203","endLine":4,"endColumn":32},{"ruleId":"200","severity":1,"message":"230","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":12},{"ruleId":"215","severity":1,"message":"231","line":32,"column":14,"nodeType":"217","messageId":"218","endLine":32,"endColumn":16},{"ruleId":"215","severity":1,"message":"231","line":36,"column":17,"nodeType":"217","messageId":"218","endLine":36,"endColumn":19},{"ruleId":"224","severity":1,"message":"232","line":40,"column":23,"nodeType":"233","endLine":46,"endColumn":13},{"ruleId":"224","severity":1,"message":"234","line":59,"column":10,"nodeType":"226","endLine":59,"endColumn":12,"suggestions":"235"},{"ruleId":"215","severity":1,"message":"231","line":124,"column":61,"nodeType":"217","messageId":"218","endLine":124,"endColumn":63},{"ruleId":"236","severity":1,"message":"237","line":12,"column":1,"nodeType":"238","endLine":59,"endColumn":2},{"ruleId":"239","severity":1,"message":"240","line":17,"column":5,"nodeType":"241","messageId":"242","endLine":55,"endColumn":6},{"ruleId":"215","severity":1,"message":"216","line":17,"column":35,"nodeType":"217","messageId":"218","endLine":17,"endColumn":37},{"ruleId":"215","severity":1,"message":"231","line":71,"column":44,"nodeType":"217","messageId":"218","endLine":71,"endColumn":46},{"ruleId":"215","severity":1,"message":"231","line":71,"column":83,"nodeType":"217","messageId":"218","endLine":71,"endColumn":85},{"ruleId":"215","severity":1,"message":"231","line":73,"column":44,"nodeType":"217","messageId":"218","endLine":73,"endColumn":46},{"ruleId":"215","severity":1,"message":"231","line":73,"column":83,"nodeType":"217","messageId":"218","endLine":73,"endColumn":85},{"ruleId":"236","severity":1,"message":"237","line":8,"column":1,"nodeType":"238","endLine":32,"endColumn":2},{"ruleId":"239","severity":1,"message":"240","line":9,"column":5,"nodeType":"241","messageId":"242","endLine":30,"endColumn":2},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'Images' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ReactLoading' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'number' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Box' is defined but never used.","'Component' is defined but never used.","'LoginStrings' is defined but never used.",["243"],["244"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.authenticated' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["245"],"'useEffect' is defined but never used.","'isLoggedInUser' is defined but never used.","'logo' is defined but never used.","Expected '===' and instead saw '=='.","Assignments to the 'unsubscribe' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'unsubscribe'. Either include it or remove the dependency array.",["246"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [auth.authenticated, dispatch]",{"range":"251","text":"252"},"Update the dependencies array to be: [unsubscribe]",{"range":"253","text":"254"},[627,629],"[auth.authenticated, dispatch]",[1872,1874],"[unsubscribe]"]